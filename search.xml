<?xml version="1.0" encoding="utf-8"?>
<search>
  
    
    <entry>
        <title>Markdown Test</title>
        <url>/archives/20210525/test/</url>
        <content type="html">
            <![CDATA[<hr><p><strong>Advertisement :)</strong></p><ul><li><strong><a href="https://nodeca.github.io/pica/demo/">pica</a></strong> - high quality and fast image<br>resize in browser.</li><li><strong><a href="https://github.com/nodeca/babelfish/">babelfish</a></strong> - developer friendly<br>i18n with plurals support and easy syntax.</li></ul><p>You will like those projects!</p><hr><h1>h1 Heading 8-)</h1><h2 id="h2-Heading">h2 Heading</h2><h3 id="h3-Heading">h3 Heading</h3><h4 id="h4-Heading">h4 Heading</h4><h5 id="h5-Heading">h5 Heading</h5><h6 id="h6-Heading">h6 Heading</h6><h2 id="Horizontal-Rules">Horizontal Rules</h2><hr><hr><hr><h2 id="Typographic-replacements">Typographic replacements</h2><p>Enable typographer option to see result.</p><p>© © ® ® ™ ™ § § ±</p><p>test… test… test… test?.. test!..</p><p>!!! ??? ,  – —</p><p>“Smartypants, double quotes” and ‘single quotes’</p><h2 id="Emphasis">Emphasis</h2><p><strong>This is bold text</strong></p><p><strong>This is bold text</strong></p><p><em>This is italic text</em></p><p><em>This is italic text</em></p><p><s>Strikethrough</s></p><h2 id="Blockquotes">Blockquotes</h2><blockquote><p>Blockquotes can also be nested…</p><blockquote><p>…by using additional greater-than signs right next to each other…</p><blockquote><p>…or with spaces between arrows.</p></blockquote></blockquote></blockquote><h2 id="Lists">Lists</h2><p>Unordered</p><ul><li>Create a list by starting a line with <code>+</code>, <code>-</code>, or <code>*</code></li><li>Sub-lists are made by indenting 2 spaces:<ul><li>Marker character change forces new list start:<ul><li>Ac tristique libero volutpat at</li></ul><ul><li>Facilisis in pretium nisl aliquet</li></ul><ul><li>Nulla volutpat aliquam velit</li></ul></li></ul></li><li>Very easy!</li></ul><p>Ordered</p><ol><li><p>Lorem ipsum dolor sit amet</p></li><li><p>Consectetur adipiscing elit</p></li><li><p>Integer molestie lorem at massa</p></li><li><p>You can use sequential numbers…</p></li><li><p>…or keep all the numbers as <code>1.</code></p></li></ol><p>Start numbering with offset:</p><ol start="57"><li>foo</li><li>bar</li></ol><h2 id="Code">Code</h2><p>Inline <code>code</code></p><p>Indented code</p><pre><code>// Some commentsline 1 of codeline 2 of codeline 3 of code</code></pre><p>Block code “fences”</p><pre class="line-numbers language-none"><code class="language-none">Sample text here...<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>Syntax highlighting</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">var</span> <span class="token function-variable function">foo</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">bar</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> bar<span class="token operator">++</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">foo</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Tables">Tables</h2><table><thead><tr><th>Option</th><th>Description</th></tr></thead><tbody><tr><td>data</td><td>path to data files to supply the data that will be passed into templates.</td></tr><tr><td>engine</td><td>engine to be used for processing templates. Handlebars is the default.</td></tr><tr><td>ext</td><td>extension to be used for dest files.</td></tr></tbody></table><p>Right aligned columns</p><table><thead><tr><th style="text-align:right">Option</th><th style="text-align:right">Description</th></tr></thead><tbody><tr><td style="text-align:right">data</td><td style="text-align:right">path to data files to supply the data that will be passed into templates.</td></tr><tr><td style="text-align:right">engine</td><td style="text-align:right">engine to be used for processing templates. Handlebars is the default.</td></tr><tr><td style="text-align:right">ext</td><td style="text-align:right">extension to be used for dest files.</td></tr></tbody></table><h2 id="Links">Links</h2><p><a href="http://dev.nodeca.com">link text</a></p><p><a href="http://nodeca.github.io/pica/demo/" title="title text!">link with title</a></p><p>Autoconverted link <a href="https://github.com/nodeca/pica">https://github.com/nodeca/pica</a> (enable linkify to see)</p><h2 id="Images">Images</h2><p><img src="https://octodex.github.com/images/minion.png" alt="Minion"><br><img src="https://octodex.github.com/images/stormtroopocat.jpg" alt="Stormtroopocat" title="The Stormtroopocat"></p><p>Like links, Images also have a footnote style syntax</p><p><img src="https://octodex.github.com/images/dojocat.jpg" alt="Alt text" title="The Dojocat"></p><p>With a reference later in the document defining the URL location:</p><h2 id="Plugins">Plugins</h2><p>The killer feature of <code>markdown-it</code> is very effective support of<br><a href="https://www.npmjs.org/browse/keyword/markdown-it-plugin">syntax plugins</a>.</p><h3 id="Emojies"><a href="https://github.com/markdown-it/markdown-it-emoji">Emojies</a></h3><blockquote><p>Classic markup: :wink: :crush: :cry: :tear: :laughing: :yum:</p><p>Shortcuts (emoticons): :-) :-( 8-) ;)</p></blockquote><p>see <a href="https://github.com/markdown-it/markdown-it-emoji#change-output">how to change output</a> with twemoji.</p><h3 id="Subscript-Superscript"><a href="https://github.com/markdown-it/markdown-it-sub">Subscript</a> / <a href="https://github.com/markdown-it/markdown-it-sup">Superscript</a></h3><ul><li>19<sup>th</sup></li><li>H<sub>2</sub>O</li></ul><h3 id="ins"><a href="https://github.com/markdown-it/markdown-it-ins">&lt;ins&gt;</a></h3><p><ins>Inserted text</ins></p><h3 id="mark"><a href="https://github.com/markdown-it/markdown-it-mark">&lt;mark&gt;</a></h3><p>==Marked text==</p><h3 id="Footnotes"><a href="https://github.com/markdown-it/markdown-it-footnote">Footnotes</a></h3><p>Footnote 1 link<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup>.</p><p>Footnote 2 link<sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup>.</p><p>Inline footnote<sup class="footnote-ref"><a href="#fn3" id="fnref3">[3]</a></sup> definition.</p><p>Duplicated footnote reference<sup class="footnote-ref"><a href="#fn2" id="fnref2:1">[2:1]</a></sup>.</p><h3 id="Definition-lists"><a href="https://github.com/markdown-it/markdown-it-deflist">Definition lists</a></h3><p>Term 1</p><p>:   Definition 1<br>with lazy continuation.</p><p>Term 2 with <em>inline markup</em></p><p>:   Definition 2</p><pre><code>    &#123; some code, part of Definition 2 &#125;Third paragraph of definition 2.</code></pre><p><em>Compact style:</em></p><p>Term 1<br>~ Definition 1</p><p>Term 2<br>~ Definition 2a<br>~ Definition 2b</p><h3 id="Abbreviations"><a href="https://github.com/markdown-it/markdown-it-abbr">Abbreviations</a></h3><p>This is <abbr title="Hyper Text Markup Language">HTML</abbr> abbreviation example.</p><p>It converts “<abbr title="Hyper Text Markup Language">HTML</abbr>”, but keep intact partial entries like “xxxHTMLyyy” and so on.</p><h3 id="Custom-containers"><a href="https://github.com/markdown-it/markdown-it-container">Custom containers</a></h3><p>::: warning<br><em>here be dragons</em><br>:::</p><hr class="footnotes-sep"><section class="footnotes"><ol class="footnotes-list"><li id="fn1" class="footnote-item"><p>Footnote <strong>can have markup</strong></p><p>and multiple paragraphs. <a href="#fnref1" class="footnote-backref">↩︎</a></p></li><li id="fn2" class="footnote-item"><p>Footnote text. <a href="#fnref2" class="footnote-backref">↩︎</a> <a href="#fnref2:1" class="footnote-backref">↩︎</a></p></li><li id="fn3" class="footnote-item"><p>Text of inline footnote <a href="#fnref3" class="footnote-backref">↩︎</a></p></li></ol></section>]]>
        </content>
        <time>2021-05-25</time>
    </entry>
    
    <entry>
        <title>CISCN 2021 逆向题 CISCN_gift WP</title>
        <url>/archives/20210521/CISCN2021/</url>
        <content type="html">
            <![CDATA[<p>CISCN 比赛正好撞上期中考，就没去参加。事后在学长的建议下复盘了一下 CISCN_gift，感觉收获良多，记录 WP 如下。</p><p>IDA7.5 打开一看，没有任何符号表。在 Strings 面板中发现大量 <code>fmt</code> 开头的函数，猜测使用 Go 语言编写，故使用 IDA7.6 打开。发现能正确识别出符号表：</p><img src="https://cdn.jsdelivr.net/gh/gyj1109/Blog-Resources@latest/post-assets/2021-05-21-CISCN2021/1.png" alt="[符号表] "><p>显然，最后6个函数是分析的重点所在。</p><p>先从 <code>main_main</code> 开始。</p><p>首先映入眼帘的就是3个666函数：<code>main_CISCN6666666</code>、<code>main_CISCN66666666</code> 和 <code>main_CISCN666666666</code>。一次查看并分析，无参无返回值，直接在最后一个 <code>main_CISCN666666666</code> 后下断点，发现这三个函数只是在控制台输出欢迎语，略过。</p><p>继续看 <code>main_main</code>。下面有个 <code>while</code>，但其实就是一个 <code>for(int i = 0; i &lt; 32; i++)</code>。其中有一个 <code>off_568230</code> 追踪以后发现是延迟时间表 <em>（其实不是，只是循环次数，但当时的直觉就认为这是字母延迟输出的延迟）</em>。故整理格式后命名：</p><img src="https://cdn.jsdelivr.net/gh/gyj1109/Blog-Resources@latest/post-assets/2021-05-21-CISCN2021/2.png" alt="[timeList] "><p>紧接着下方出现 Go 函数 <code>runtime_makeslice</code>。查阅资料发现该函数构造一个 <code>slice</code> 对象。根据下文猜测未被正确识别的 <code>v11</code> 应该就是其返回值。</p><p>紧接着的又是一个被错误识别成 <code>while</code> 的 <code>for(int j = 1; j &lt;= 4; j++)</code>。里面啥也没干，就只调用了 <code>main_wtf</code>。但这个调用有些奇怪：<code>main_wtf(0LL, j, sliced_, aTime, aTime);</code>。前两个看着没啥问题，后三个就挺有意思了。联想到，刚才创建的 <code>slice</code> 对象 <code>sliced</code>，以及 <code>slice</code> 对象的结构：</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">type</span> slice <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>    array unsafe<span class="token punctuation">.</span>Pointer    <span class="token builtin">len</span>   <span class="token builtin">int</span>    <span class="token builtin">cap</span>   <span class="token builtin">int</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>推测后三个参数应该是一个结构体，故创建之。调用变为 <code>main_wtf(0LL, j, sliceObj);</code>。</p><p><code>main_wtf</code> 函数暂时先不跟进分析，先继续分析 <code>main_main</code>。<em>j循环</em>完成后，出现语句 <code>v6 = *(&amp;v17 + qword_5B20E8);</code>。结合交叉引用中 <code>qword_5B20E8</code> 被 <code>main_wtf</code> 更改和下文对其的大量引用，推测 <code>qword_5B20E8</code> 为 <code>main_wtf</code> 函数的等效返回值（可以看作是返回值）。同时从上方的栈分配可知其应该小于17。回看 <code>v17</code> 变量，发现其是一个 <code>__int64</code> 对象。但从下方语句来看，其应该为一数组。结合 <code>qword_5B20E8</code> 小于17的线索，将其类型更改为 <code>__int8 v17[17]</code>。同时推测其为一 <a href="https://zh.wikipedia.org/wiki/S%E7%9B%92">S−box</a>。</p><p>再往下的部分都是 Go 标准库的 fprintf 的部分，唯独 <code>8 * (v6 ^ 0x66)</code> 感觉有些蹊跷，考虑是将 S−box 的返回值与 <code>0x66</code> 异或后输出。</p><p><code>main_main</code> 的分析到此结束，接下来看 <code>main_wtf</code>。</p><p>首先发现递归调用。调用时有 <code>v3 + 1</code> 也就是参数 <code>a1 + 1</code>，故判断参数 <code>a1</code> 为递归深度。</p><p><code>if ( depth == sliced.len - 1 )</code> 的含义显而易见，而 <code>else</code> 分支的代码和 <code>main_main</code> 的几乎一致，发生递归调用，深度+1。<code>then</code> 分支中调用了最后一个函数 <code>main_goooo</code>。若返回值为真则对 <code>qword_5B20E8</code> 进行操作。由此判断 <code>qword_5B20E8</code> 应该是加密数值，改名为 <code>enc</code>。</p><p>最后来分析 <code>main_goooo</code> 函数。在里头发现了一个奇怪的语法：<code>*(&amp;v3 + v2)</code>，考虑 <code>v3</code> 为一数组。看着 <code>LOBYTE(result)</code> 挺难受的，把函数返回类型也改一下。改完以后程序的运行逻辑一目了然。</p><img src="https://cdn.jsdelivr.net/gh/gyj1109/Blog-Resources@latest/post-assets/2021-05-21-CISCN2021/3.png" alt="[main_goooo] "><p>至此，函数主体逻辑已经清晰。写 Python 脚本模拟：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">enc <span class="token operator">=</span> <span class="token number">0</span>timeLists <span class="token operator">=</span> <span class="token punctuation">[</span>    <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">0x0A</span><span class="token punctuation">,</span> <span class="token number">0x0B</span><span class="token punctuation">,</span> <span class="token number">0x0C</span><span class="token punctuation">,</span> <span class="token number">0x0D</span><span class="token punctuation">,</span> <span class="token number">0x0E</span><span class="token punctuation">,</span> <span class="token number">0x0F</span><span class="token punctuation">,</span> <span class="token number">0x10</span><span class="token punctuation">,</span> <span class="token number">0x11</span><span class="token punctuation">,</span> <span class="token number">0x12</span><span class="token punctuation">,</span> <span class="token number">0x14</span><span class="token punctuation">,</span>    <span class="token number">0x19</span><span class="token punctuation">,</span> <span class="token number">0x1E</span><span class="token punctuation">,</span> <span class="token number">0x28</span><span class="token punctuation">,</span> <span class="token number">0x42</span><span class="token punctuation">,</span> <span class="token number">0x66</span><span class="token punctuation">,</span> <span class="token number">0x0A0</span><span class="token punctuation">,</span> <span class="token number">0x936</span><span class="token punctuation">,</span> <span class="token number">0x3D21</span><span class="token punctuation">,</span> <span class="token number">0x149A7</span><span class="token punctuation">,</span> <span class="token number">0x243AC</span><span class="token punctuation">,</span>    <span class="token number">0x0CB5BE</span><span class="token punctuation">,</span> <span class="token number">0x47DC61</span><span class="token punctuation">,</span> <span class="token number">0x16C0F46</span><span class="token punctuation">,</span> <span class="token number">0x262C432</span><span class="token punctuation">,</span> <span class="token number">0x4ACE299</span><span class="token punctuation">,</span> <span class="token number">0x10FBC92A</span><span class="token punctuation">,</span>    <span class="token number">0x329ECDFD</span><span class="token punctuation">,</span> <span class="token number">0x370D7470</span><span class="token punctuation">]</span><span class="token keyword">def</span> <span class="token function">main_goooo</span><span class="token punctuation">(</span>array<span class="token punctuation">)</span><span class="token punctuation">:</span>    box <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">5</span>    <span class="token keyword">for</span> tmp <span class="token keyword">in</span> array<span class="token punctuation">:</span>        box<span class="token punctuation">[</span>tmp<span class="token punctuation">]</span> <span class="token operator">^</span><span class="token operator">=</span> <span class="token number">1</span>    <span class="token keyword">return</span> box<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token keyword">and</span> box<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token keyword">def</span> <span class="token function">main_wtf</span><span class="token punctuation">(</span>depth<span class="token punctuation">,</span> j<span class="token punctuation">,</span> array<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">global</span> enc    array<span class="token punctuation">[</span>depth<span class="token punctuation">]</span> <span class="token operator">=</span> j    <span class="token keyword">if</span> depth <span class="token operator">==</span> <span class="token builtin">len</span><span class="token punctuation">(</span>array<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>main_goooo<span class="token punctuation">(</span>array<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            enc <span class="token operator">=</span> enc <span class="token operator">-</span> <span class="token number">17</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>enc <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>enc <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">0xF0F0F0F0F0F0F0F1</span><span class="token punctuation">)</span> <span class="token operator">>></span> <span class="token number">64</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">>></span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>enc <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">>></span> <span class="token number">63</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">for</span> jj <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">:</span>            main_wtf<span class="token punctuation">(</span>depth <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> jj<span class="token punctuation">,</span> array<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">main_main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">global</span> enc    <span class="token keyword">for</span> aTime <span class="token keyword">in</span> timeLists<span class="token punctuation">:</span>        enc <span class="token operator">=</span> <span class="token number">0</span>        <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">:</span>            main_wtf<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> j<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">*</span> aTime<span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>enc_time<span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">"__main__"</span><span class="token punctuation">:</span>    main_main<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>但是运行后可以发现这个算法极慢且输出无规律。查阅学长们的 WP 发现可以尝试计算 <code>enc</code> 的运行次数，故修改代码如下：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">enc <span class="token operator">=</span> <span class="token number">0</span>enc_time <span class="token operator">=</span> <span class="token number">0</span>timeLists <span class="token operator">=</span> <span class="token punctuation">[</span>    <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">0x0A</span><span class="token punctuation">,</span> <span class="token number">0x0B</span><span class="token punctuation">,</span> <span class="token number">0x0C</span><span class="token punctuation">,</span> <span class="token number">0x0D</span><span class="token punctuation">,</span> <span class="token number">0x0E</span><span class="token punctuation">,</span> <span class="token number">0x0F</span><span class="token punctuation">,</span> <span class="token number">0x10</span><span class="token punctuation">,</span> <span class="token number">0x11</span><span class="token punctuation">,</span> <span class="token number">0x12</span><span class="token punctuation">,</span> <span class="token number">0x14</span><span class="token punctuation">,</span>    <span class="token number">0x19</span><span class="token punctuation">,</span> <span class="token number">0x1E</span><span class="token punctuation">,</span> <span class="token number">0x28</span><span class="token punctuation">,</span> <span class="token number">0x42</span><span class="token punctuation">,</span> <span class="token number">0x66</span><span class="token punctuation">,</span> <span class="token number">0x0A0</span><span class="token punctuation">,</span> <span class="token number">0x936</span><span class="token punctuation">,</span> <span class="token number">0x3D21</span><span class="token punctuation">,</span> <span class="token number">0x149A7</span><span class="token punctuation">,</span> <span class="token number">0x243AC</span><span class="token punctuation">,</span>    <span class="token number">0x0CB5BE</span><span class="token punctuation">,</span> <span class="token number">0x47DC61</span><span class="token punctuation">,</span> <span class="token number">0x16C0F46</span><span class="token punctuation">,</span> <span class="token number">0x262C432</span><span class="token punctuation">,</span> <span class="token number">0x4ACE299</span><span class="token punctuation">,</span> <span class="token number">0x10FBC92A</span><span class="token punctuation">,</span>    <span class="token number">0x329ECDFD</span><span class="token punctuation">,</span> <span class="token number">0x370D7470</span><span class="token punctuation">]</span><span class="token keyword">def</span> <span class="token function">main_goooo</span><span class="token punctuation">(</span>array<span class="token punctuation">)</span><span class="token punctuation">:</span>    box <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">5</span>    <span class="token keyword">for</span> tmp <span class="token keyword">in</span> array<span class="token punctuation">:</span>        box<span class="token punctuation">[</span>tmp<span class="token punctuation">]</span> <span class="token operator">^</span><span class="token operator">=</span> <span class="token number">1</span>    <span class="token keyword">return</span> box<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token keyword">and</span> box<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token keyword">def</span> <span class="token function">main_wtf</span><span class="token punctuation">(</span>depth<span class="token punctuation">,</span> j<span class="token punctuation">,</span> array<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">global</span> enc<span class="token punctuation">,</span>enc_time    array<span class="token punctuation">[</span>depth<span class="token punctuation">]</span> <span class="token operator">=</span> j    <span class="token keyword">if</span> depth <span class="token operator">==</span> <span class="token builtin">len</span><span class="token punctuation">(</span>array<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>main_goooo<span class="token punctuation">(</span>array<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            enc_time <span class="token operator">+=</span> <span class="token number">1</span>            enc <span class="token operator">=</span> enc <span class="token operator">-</span> <span class="token number">17</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>enc <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>                <span class="token punctuation">(</span>enc <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">0xF0F0F0F0F0F0F0F1</span><span class="token punctuation">)</span> <span class="token operator">>></span> <span class="token number">64</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">>></span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token operator">-</span>                              <span class="token punctuation">(</span><span class="token punctuation">(</span>enc <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">>></span> <span class="token number">63</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">for</span> jj <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">:</span>            main_wtf<span class="token punctuation">(</span>depth <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> jj<span class="token punctuation">,</span> array<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">main_main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">global</span> enc<span class="token punctuation">,</span> enc_time    <span class="token keyword">for</span> aTime <span class="token keyword">in</span> timeLists<span class="token punctuation">:</span>        enc <span class="token operator">=</span> <span class="token number">0</span>        enc_time <span class="token operator">=</span> <span class="token number">0</span>        <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">:</span>            main_wtf<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> j<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">*</span> aTime<span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>enc_time<span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">"__main__"</span><span class="token punctuation">:</span>    main_main<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>得数列 <code>2, 20, 1056, 65792, 262656</code>。查询后得到通项公式 <code>2 ** n + 4 ** n</code>。于是直接写出模拟：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">for</span> n <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    enc <span class="token operator">=</span> <span class="token number">0</span>    <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token operator">**</span>n <span class="token operator">+</span> <span class="token number">4</span><span class="token operator">**</span>n<span class="token punctuation">)</span><span class="token punctuation">:</span>        enc <span class="token operator">=</span> enc <span class="token operator">-</span> <span class="token number">17</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>enc <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>            <span class="token punctuation">(</span>enc <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">0xF0F0F0F0F0F0F0F1</span><span class="token punctuation">)</span> <span class="token operator">>></span> <span class="token number">64</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">>></span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token operator">-</span>                            <span class="token punctuation">(</span><span class="token punctuation">(</span>enc <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">>></span> <span class="token number">63</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>enc <span class="token operator">%</span> <span class="token number">17</span><span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">", "</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>得数列 <code>2, 6, 3, 4, 0, 2, -5, 5, 2, 6, 3, 4, 0, 2</code>。可以发现其 8 个一组循环，但是其中出现负数。考虑到 <code>main_main</code> 中的 <code>sbox</code> 长度为 17，故 <code>-5</code> 等价于 <code>12</code>，数列为 <code>2, 6, 3, 4, 0, 2, 12, 5</code>。</p><p>由下述代码求得 <code>sbox</code> 的值：</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">"IDA.h"</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span><span class="token operator">*</span>argv<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    __int8 sbox<span class="token punctuation">[</span><span class="token number">17</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token operator">*</span><span class="token punctuation">(</span>_QWORD <span class="token operator">*</span><span class="token punctuation">)</span>sbox <span class="token operator">=</span> <span class="token number">0x5F53055504525E54LL</span><span class="token punctuation">;</span>    <span class="token operator">*</span><span class="token punctuation">(</span>_QWORD <span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>sbox<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0x3025156540750LL</span><span class="token punctuation">;</span>    sbox<span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">87</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">17</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d, "</span><span class="token punctuation">,</span> sbox<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>得 <code>sbox = [84, 94, 82, 4, 85, 5, 83, 95, 80, 7, 84, 86, 81, 2, 3, 0]</code>。</p><p>最终代码：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">timeLists <span class="token operator">=</span> <span class="token punctuation">[</span>    <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">0x0A</span><span class="token punctuation">,</span> <span class="token number">0x0B</span><span class="token punctuation">,</span> <span class="token number">0x0C</span><span class="token punctuation">,</span> <span class="token number">0x0D</span><span class="token punctuation">,</span> <span class="token number">0x0E</span><span class="token punctuation">,</span> <span class="token number">0x0F</span><span class="token punctuation">,</span> <span class="token number">0x10</span><span class="token punctuation">,</span> <span class="token number">0x11</span><span class="token punctuation">,</span> <span class="token number">0x12</span><span class="token punctuation">,</span> <span class="token number">0x14</span><span class="token punctuation">,</span>    <span class="token number">0x19</span><span class="token punctuation">,</span> <span class="token number">0x1E</span><span class="token punctuation">,</span> <span class="token number">0x28</span><span class="token punctuation">,</span> <span class="token number">0x42</span><span class="token punctuation">,</span> <span class="token number">0x66</span><span class="token punctuation">,</span> <span class="token number">0x0A0</span><span class="token punctuation">,</span> <span class="token number">0x936</span><span class="token punctuation">,</span> <span class="token number">0x3D21</span><span class="token punctuation">,</span> <span class="token number">0x149A7</span><span class="token punctuation">,</span> <span class="token number">0x243AC</span><span class="token punctuation">,</span>    <span class="token number">0x0CB5BE</span><span class="token punctuation">,</span> <span class="token number">0x47DC61</span><span class="token punctuation">,</span> <span class="token number">0x16C0F46</span><span class="token punctuation">,</span> <span class="token number">0x262C432</span><span class="token punctuation">,</span> <span class="token number">0x4ACE299</span><span class="token punctuation">,</span> <span class="token number">0x10FBC92A</span><span class="token punctuation">,</span>    <span class="token number">0x329ECDFD</span><span class="token punctuation">,</span> <span class="token number">0x370D7470</span><span class="token punctuation">]</span>sbox <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">84</span><span class="token punctuation">,</span> <span class="token number">94</span><span class="token punctuation">,</span> <span class="token number">82</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">85</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">83</span><span class="token punctuation">,</span> <span class="token number">95</span><span class="token punctuation">,</span> <span class="token number">80</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">84</span><span class="token punctuation">,</span> <span class="token number">86</span><span class="token punctuation">,</span> <span class="token number">81</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span>enc_cycle <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token builtin">chr</span><span class="token punctuation">(</span>sbox<span class="token punctuation">[</span>enc_cycle<span class="token punctuation">[</span><span class="token punctuation">(</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">^</span> <span class="token number">0x66</span><span class="token punctuation">)</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> timeLists<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>输出 <code>4b445b3247c45344c54c44734445452c</code></p><p>最终 flag：<code>CISCN&#123;4b445b3247c45344c54c44734445452c&#125;</code></p><p>附：</p><p><a href="https://cdn.jsdelivr.net/gh/gyj1109/Blog-Resources@master/post-assets/2021-05-21-CISCN2021/CISCN_gift.zip">exe 及 i64 文件 (请使用 IDA7.6)</a></p><p>所有 Python 代码：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">enc <span class="token operator">=</span> <span class="token number">0</span>enc_time <span class="token operator">=</span> <span class="token number">0</span>timeLists <span class="token operator">=</span> <span class="token punctuation">[</span>    <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">0x0A</span><span class="token punctuation">,</span> <span class="token number">0x0B</span><span class="token punctuation">,</span> <span class="token number">0x0C</span><span class="token punctuation">,</span> <span class="token number">0x0D</span><span class="token punctuation">,</span> <span class="token number">0x0E</span><span class="token punctuation">,</span> <span class="token number">0x0F</span><span class="token punctuation">,</span> <span class="token number">0x10</span><span class="token punctuation">,</span> <span class="token number">0x11</span><span class="token punctuation">,</span> <span class="token number">0x12</span><span class="token punctuation">,</span> <span class="token number">0x14</span><span class="token punctuation">,</span>    <span class="token number">0x19</span><span class="token punctuation">,</span> <span class="token number">0x1E</span><span class="token punctuation">,</span> <span class="token number">0x28</span><span class="token punctuation">,</span> <span class="token number">0x42</span><span class="token punctuation">,</span> <span class="token number">0x66</span><span class="token punctuation">,</span> <span class="token number">0x0A0</span><span class="token punctuation">,</span> <span class="token number">0x936</span><span class="token punctuation">,</span> <span class="token number">0x3D21</span><span class="token punctuation">,</span> <span class="token number">0x149A7</span><span class="token punctuation">,</span> <span class="token number">0x243AC</span><span class="token punctuation">,</span>    <span class="token number">0x0CB5BE</span><span class="token punctuation">,</span> <span class="token number">0x47DC61</span><span class="token punctuation">,</span> <span class="token number">0x16C0F46</span><span class="token punctuation">,</span> <span class="token number">0x262C432</span><span class="token punctuation">,</span> <span class="token number">0x4ACE299</span><span class="token punctuation">,</span> <span class="token number">0x10FBC92A</span><span class="token punctuation">,</span>    <span class="token number">0x329ECDFD</span><span class="token punctuation">,</span> <span class="token number">0x370D7470</span><span class="token punctuation">]</span><span class="token keyword">def</span> <span class="token function">main_goooo</span><span class="token punctuation">(</span>array<span class="token punctuation">)</span><span class="token punctuation">:</span>    box <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">5</span>    <span class="token keyword">for</span> tmp <span class="token keyword">in</span> array<span class="token punctuation">:</span>        box<span class="token punctuation">[</span>tmp<span class="token punctuation">]</span> <span class="token operator">^</span><span class="token operator">=</span> <span class="token number">1</span>    <span class="token keyword">return</span> box<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token keyword">and</span> box<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token keyword">def</span> <span class="token function">main_wtf</span><span class="token punctuation">(</span>depth<span class="token punctuation">,</span> j<span class="token punctuation">,</span> array<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">global</span> enc<span class="token punctuation">,</span> enc_time    array<span class="token punctuation">[</span>depth<span class="token punctuation">]</span> <span class="token operator">=</span> j    <span class="token keyword">if</span> depth <span class="token operator">==</span> <span class="token builtin">len</span><span class="token punctuation">(</span>array<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>main_goooo<span class="token punctuation">(</span>array<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            enc_time <span class="token operator">+=</span> <span class="token number">1</span>            enc <span class="token operator">=</span> enc <span class="token operator">-</span> <span class="token number">17</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>enc <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>                <span class="token punctuation">(</span>enc <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">0xF0F0F0F0F0F0F0F1</span><span class="token punctuation">)</span> <span class="token operator">>></span> <span class="token number">64</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">>></span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token operator">-</span>                              <span class="token punctuation">(</span><span class="token punctuation">(</span>enc <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">>></span> <span class="token number">63</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">for</span> jj <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">:</span>            main_wtf<span class="token punctuation">(</span>depth <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> jj<span class="token punctuation">,</span> array<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">main_main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">global</span> enc<span class="token punctuation">,</span> enc_time    <span class="token keyword">for</span> aTime <span class="token keyword">in</span> timeLists<span class="token punctuation">:</span>        enc <span class="token operator">=</span> <span class="token number">0</span>        enc_time <span class="token operator">=</span> <span class="token number">0</span>        <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">:</span>            main_wtf<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> j<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">*</span> aTime<span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>enc_time<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">try_enc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> n <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        enc <span class="token operator">=</span> <span class="token number">0</span>        <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token operator">**</span>n <span class="token operator">+</span> <span class="token number">4</span><span class="token operator">**</span>n<span class="token punctuation">)</span><span class="token punctuation">:</span>            enc <span class="token operator">=</span> enc <span class="token operator">-</span> <span class="token number">17</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>enc <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>                <span class="token punctuation">(</span>enc <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">0xF0F0F0F0F0F0F0F1</span><span class="token punctuation">)</span> <span class="token operator">>></span> <span class="token number">64</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">>></span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token operator">-</span>                              <span class="token punctuation">(</span><span class="token punctuation">(</span>enc <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">>></span> <span class="token number">63</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>enc<span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">", "</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">flag</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    sbox <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">84</span><span class="token punctuation">,</span> <span class="token number">94</span><span class="token punctuation">,</span> <span class="token number">82</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">85</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">83</span><span class="token punctuation">,</span> <span class="token number">95</span><span class="token punctuation">,</span> <span class="token number">80</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">84</span><span class="token punctuation">,</span> <span class="token number">86</span><span class="token punctuation">,</span> <span class="token number">81</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span>    enc_cycle <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token builtin">chr</span><span class="token punctuation">(</span>sbox<span class="token punctuation">[</span>enc_cycle<span class="token punctuation">[</span><span class="token punctuation">(</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">^</span> <span class="token number">0x66</span><span class="token punctuation">)</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> timeLists<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">"__main__"</span><span class="token punctuation">:</span>    <span class="token comment"># main_main()</span>    <span class="token comment"># try_enc()</span>    flag<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]>
        </content>
        <time>2021-05-21</time>
    </entry>
    
    <entry>
        <title>Hello world</title>
        <url>/archives/20210328/hello/</url>
        <content type="html">
            <![CDATA[<h1>纪念</h1><p>第一篇博文降生，心情好激动啊！~</p><p>现在我宣布：该博客，正 式 起 航 ！~<br><img src="https://cdn.jsdelivr.net/gh/gyj1109/Blog-Resources@latest/post-assets/2021-03-28-hello/start.png" alt="[Start] "></p>]]>
        </content>
        <time>2021-03-28</time>
    </entry>
    
  
</search>
